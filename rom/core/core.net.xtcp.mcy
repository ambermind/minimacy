/* Copyright (c) 2022, Sylvain Huet, Ambermind
   This program is free software: you can redistribute it and/or modify it
   under the terms of the GNU General Public License, version 2.0, as
   published by the Free Software Foundation.
   This program is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
   FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License,
   version 2.0, for more details.
   You should have received a copy of the GNU General Public License along
   with this program. If not, see <https://www.gnu.org/licenses/>. */


use core.net.tls.tcp;;

sum XTcp = _clearX _, _tlsX _;;

fun xTcpOnEvent x onRead onWrite=
	match x with
		_clearX tcp -> tcpOnEvent tcp onRead onWrite,
		_tlsX   h   -> tlsTcpOnEvent h onRead onWrite;
	true;;

fun xTcpWrite x data start=
	match x with
		_clearX tcp -> tcpWrite tcp data start,
		_tlsX   h   -> tlsTcpWrite h data start;;

fun _xTcpCall0 x cbClear cbTls=
	match x with
		_clearX tcp -> call cbClear tcp,
		_tlsX   h   -> call cbTls h;;

fun _xTcpCall1 x arg cbClear cbTls=
	match x with
		_clearX tcp -> call cbClear tcp arg,
		_tlsX   h   -> call cbTls h arg;;

fun xTcpNoDelay x noDelay= _xTcpCall1 x noDelay #tcpNoDelay #tlsTcpNoDelay;;
fun xTcpRemoteIp x= _xTcpCall0 x #tcpRemoteIp #tlsTcpRemoteIp;;
fun xTcpRemotePort x= _xTcpCall0 x #tcpRemotePort #tlsTcpRemotePort;;
fun xTcpGetClientCertificate x= match x with _tlsX h -> tlsTcpGetClientCertificate h;;
fun xTcpClose x= _xTcpCall0 x #tcpClose #tlsTcpClose;;
fun xTcpGetServerName x= match x with _tlsX h -> tlsTcpGetServerName h;;

fun xTcpSetCipherSuites x cipherSuites= match x with _tlsX h -> tlsTcpSetCipherSuites h cipherSuites;;

fun xTcpSrvCreate ip port= tcpSrvCreate ip port;;

// hostList is :
// - for a http server: nil
// - for a https server: a list of [serverName privateKey pwd certList authForClientCert] (see function tlsMakeHosts in core.net.tls for documentation)
fun xTcpSrvOnAccept hostList srv cb=
	match hostList with
		nil -> tcpSrvOnAccept srv (lambda tcp= call cb _clearX tcp),
		_   -> tlsTcpSrvOnAccept hostList srv (lambda tt= call cb _tlsX tt);;
fun xTcpSrvOnAccept12 hostList srv cb=
	match hostList with
		nil -> tcpSrvOnAccept srv (lambda tcp= call cb _clearX tcp),
		_   -> tlsTcpSrvOnAccept12 hostList srv (lambda tt= call cb _tlsX tt);;

// serverName is :
// - for a http request: nil
// - for a https request: either a domain name or a binary IP address (like "\1\1\1\1" for 1.1.1.1)
fun xTcpOpen ip port serverName= xTcpOpenExt ip port serverName nil nil nil;;
fun xTcpOpen12 ip port serverName= xTcpOpenExt12 ip port serverName nil nil nil;;

fun xTcpOpenExt ip port serverName cipherSuites clientCertificate clientKey=
	match serverName with
		nil -> _clearX tcpOpen ip port,
		_   -> _tlsX tlsTcpOpen ip port serverName cipherSuites clientCertificate clientKey;;

fun xTcpOpenExt12 ip port serverName cipherSuites clientCertificate clientKey=
	match serverName with
		nil -> _clearX tcpOpen ip port,
		_   -> _tlsX tlsTcpOpen12 ip port serverName cipherSuites clientCertificate clientKey;;
