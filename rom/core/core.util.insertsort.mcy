/* Copyright (c) 2022, Sylvain Huet, Ambermind
   This program is free software: you can redistribute it and/or modify it
   under the terms of the GNU General Public License, version 2.0, as
   published by the Free Software Foundation.
   This program is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
   FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License,
   version 2.0, for more details.
   You should have received a copy of the GNU General Public License along
   with this program. If not, see <https://www.gnu.org/licenses/>. */

/*
insertsort l f : fun list a0 (fun a0 a0 -> Bool) -> list a0
  function f a b=
   true : a before b
   false : a equals or after b

It first reverses the input list, this makes it more efficient than quicksort when the list is almost already sorted
*/

fun _insertsort l result fBefore=
	if l==nil then result
	else _insertsort (tail l) (listInsert result (head l) fBefore) fBefore;;

fun insertsort l fBefore= _insertsort (listReverse l) nil fBefore;;
